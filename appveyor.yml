version: 0.1.{build}

# Specify which branches to build
branches:
  only:
    - main
    - master
    - develop
    - feature/*
    - release/*

# Do not build on tags
skip_tags: true

# Build matrix - Windows only for testing
environment:
  matrix:
    # Windows + MSVC
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      CMAKE_GENERATOR: "Visual Studio 17 2022"
      PLATFORM: x64
      CONFIGURATION: Debug
      BUILD_TESTS: ON
      ENABLE_JPEG: ON

# Install dependencies
install:
  - cmd: IF "%PLATFORM%"=="x64" (SET ARCHITECTURE=x64) ELSE (SET ARCHITECTURE=Win32)
  - cmd: IF "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2022" (CALL "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat" %ARCHITECTURE%)
  - cmd: choco install ninja
  - cmd: IF NOT EXIST build mkdir build
  - cmd: git submodule update --init --recursive

# Configure the build
before_build:
  - cmd: cd build
  - cmd: cmake .. -G "%CMAKE_GENERATOR%" -A %PLATFORM% -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DBUILD_TESTS=%BUILD_TESTS% -DDIPAL_ENABLE_JPEG=%ENABLE_JPEG%
  - cmd: cd ..

# Build the project
build_script:
  - cmd: cd build
  - cmd: cmake --build . --config %CONFIGURATION% -- /maxcpucount:4
  - cmd: cd ..

# Run the tests
test_script:
  - cmd: IF "%CONFIGURATION%"=="Debug" IF "%BUILD_TESTS%"=="ON" (cd build && ctest -C %CONFIGURATION% --output-on-failure && cd ..)

# Package artifacts
after_build:
  - cmd: cd build
  - cmd: cmake --install . --prefix ../install --config %CONFIGURATION%
  - cmd: cd ..
  - cmd: 7z a DIPAL-%CONFIGURATION%-%PLATFORM%.zip ./install/*

# Define artifacts
artifacts:
  - path: '*.zip'
    name: Windows
